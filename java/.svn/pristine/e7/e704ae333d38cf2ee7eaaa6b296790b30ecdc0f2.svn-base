<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yilidi.o2o.order.dao.SecKillSaleProductInventoryMapper">
	<resultMap id="BaseResultMap" type="SecKillSaleProductInventory">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="ACTIVITYID" property="activityId" jdbcType="INTEGER" />
		<result column="STOREID" property="storeId" jdbcType="INTEGER" />
		<result column="SALEPRODUCTID" property="saleProductId" jdbcType="INTEGER" />
		<result column="REMAINCOUNT" property="remainCount" jdbcType="INTEGER" />
		<result column="CREATEUSERID" property="createUserId" jdbcType="INTEGER" />
		<result column="CREATETIME" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		ID,ACTIVITYID,STOREID, SALEPRODUCTID, REMAINCOUNT,
		CREATEUSERID,
		CREATETIME
	</sql>
	<sql id="Simple_Column_List">
		SALEPRODUCTID, REMAINCOUNT
	</sql>

	<insert id="save" parameterType="SecKillSaleProductInventory">
		insert into T_SECKILL_SALE_PRODUCT_INVENTORY (
		ACTIVITYID,STOREID, SALEPRODUCTID,
		REMAINCOUNT,
		CREATEUSERID, CREATETIME
		)
		values (
		#{activityId,jdbcType=INTEGER},
		#{storeId,jdbcType=INTEGER},
		#{saleProductId,jdbcType=INTEGER},
		#{remainCount,jdbcType=INTEGER},
		#{createUserId,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP}
		)
	</insert>

	<update id="updateRemainCountById">
		update T_SECKILL_SALE_PRODUCT_INVENTORY
		set
		REMAINCOUNT = REMAINCOUNT + #{delta,jdbcType=INTEGER}
		where ID =
		#{id,jdbcType=INTEGER} and REMAINCOUNT + #{delta,jdbcType=INTEGER} >= 0
	</update>

	<select id="loadByActivityIdAndSaleProductIdForUpdate" resultType="SecKillSaleProductInventory">
		select
		<include refid="Base_Column_List" />
		from T_SECKILL_SALE_PRODUCT_INVENTORY
		<where>
			SALEPRODUCTID = #{saleProductId,jdbcType=INTEGER}
			and ACTIVITYID = #{activityId,jdbcType=INTEGER}
		</where>
		FOR UPDATE
	</select>
	<select id="loadByActivityIdAndSaleProductId" resultType="SecKillSaleProductInventory">
		select
		<include refid="Base_Column_List" />
		from T_SECKILL_SALE_PRODUCT_INVENTORY
		<where>
			SALEPRODUCTID = #{saleProductId,jdbcType=INTEGER}
			and ACTIVITYID = #{activityId,jdbcType=INTEGER}
		</where>
	</select>
	<select id="deleteByActivityIdAndSaleProductId" resultType="SecKillSaleProductInventory">
		delete
		from T_SECKILL_SALE_PRODUCT_INVENTORY
		<where>
			SALEPRODUCTID = #{saleProductId,jdbcType=INTEGER}
			and ACTIVITYID = #{activityId,jdbcType=INTEGER}
		</where>
	</select>
	<select id="listByActivityIdAndStoreIdAndSaleProductIds" resultType="SecKillSaleProductInventory">
		select
		<include refid="Base_Column_List" />
		from T_SECKILL_SALE_PRODUCT_INVENTORY
		<where>
			SALEPRODUCTID in
			<foreach item="item" index="index" collection="saleProductIds" open="(" separator="," close=")">
				#{item,
				jdbcType=INTEGER}
			</foreach>
			<if test="storeId != null">
				AND STOREID = #{storeId,jdbcType=INTEGER}
			</if>
			<if test="activityId != null">
				AND ACTIVITYID = #{activityId,jdbcType=INTEGER}
			</if>
		</where>
		order by SALEPRODUCTID
	</select>
	<update id="updateRemainCountBySaleProductIdAndActivityId">
		update T_SECKILL_SALE_PRODUCT_INVENTORY
		set
		REMAINCOUNT = REMAINCOUNT + #{delta,jdbcType=INTEGER}
		where
		SALEPRODUCTID = #{saleProductId,jdbcType=INTEGER}
		and ACTIVITYID = #{activityId,jdbcType=INTEGER}
		and REMAINCOUNT +
		#{delta,jdbcType=INTEGER} >= 0
	</update>

</mapper>