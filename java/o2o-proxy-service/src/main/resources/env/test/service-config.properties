#Dubbo分布式SOA框架实现，底层I/O通信默认采用的是基于TCP的NIO框架Netty，其性能高于基于HTTP的RPC框架Hessian，序列化默认采用的是二进制序列化协议Hessian2。
#Dubbo除了实现了RPC外，最重要的是实现了服务的治理与监控，做到了服务的负载均衡与高可用性，是业界使用比较广泛而又成熟的SOA框架。

dubbo.system.application.name = o2o-system-service
dubbo.user.application.name = o2o-user-service
dubbo.product.application.name = o2o-product-service
dubbo.order.application.name = o2o-order-service

dubbo.registry.protocol = zookeeper
dubbo.registry.address = 202.10.79.187:2181
dubbo.registry.client = zkclient
dubbo.registry.system.cachefile = o2o-system-service.cache
dubbo.registry.user.cachefile = o2o-user-service.cache
dubbo.registry.product.cachefile = o2o-product-service.cache
dubbo.registry.order.cachefile = o2o-order-service.cache

dubbo.protocol.name = dubbo
dubbo.protocol.id = dubbo

dubbo.protocol.system.port = 20880
dubbo.protocol.user.port = 20881
dubbo.protocol.product.port = 20882
dubbo.protocol.order.port = 20883

hessian.protocol.name = hessian
hessian.protocol.id = hessian
hessian.protocol.system.port = 8086
hessian.protocol.user.port = 8087
hessian.protocol.product.port = 8088
hessian.protocol.order.port = 8089
hessian.protocol.system.server = servlet
hessian.protocol.user.server = servlet
hessian.protocol.product.server = servlet
hessian.protocol.order.server = servlet
hessian.protocol.system.contextpath = o2o-system-service
hessian.protocol.user.contextpath = o2o-user-service
hessian.protocol.product.contextpath = o2o-product-service
hessian.protocol.order.contextpath =o2o-order-service
