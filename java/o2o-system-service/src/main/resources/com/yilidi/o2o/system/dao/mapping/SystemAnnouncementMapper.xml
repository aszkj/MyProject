<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yilidi.o2o.system.dao.SystemAnnouncementMapper">
	<resultMap id="BaseResultMap" type="SystemAnnouncement">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="TITLE" property="title" jdbcType="VARCHAR" />
		<result column="CONTENT" property="content" jdbcType="LONGVARCHAR" />
		<result column="SORT" property="sort" jdbcType="INTEGER" />
		<result column="STATECODE" property="stateCode" jdbcType="VARCHAR" />
		<result column="CREATETIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="CREATEUSERID" property="createUserId" jdbcType="INTEGER" />
		<result column="MODIFYUSERID" property="modifyUserId" jdbcType="INTEGER" />
		<result column="MODIFYTIME" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="NOTE" property="note" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, TITLE, CONTENT, SORT, STATECODE, CREATETIME, CREATEUSERID,
		MODIFYUSERID, MODIFYTIME,
		NOTE
	</sql>

	<insert id="save" parameterType="SystemAnnouncement">
		insert into S_SYSTEM_ANNOUNCEMENT (TITLE, CONTENT, SORT,
		STATECODE, CREATETIME, CREATEUSERID, NOTE
		)
		values (#{title,jdbcType=VARCHAR},
		#{content,jdbcType=LONGVARCHAR}, #{sort,jdbcType=INTEGER},
		#{stateCode,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{createUserId,jdbcType=INTEGER},
		#{note,jdbcType=VARCHAR}
		)
	</insert>

	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from S_SYSTEM_ANNOUNCEMENT
		where ID = #{id,jdbcType=INTEGER}
	</delete>


	<update id="updateByIdSelective" parameterType="SystemAnnouncement">
		update S_SYSTEM_ANNOUNCEMENT
		<set>
			<if test="title != null">
				TITLE = #{title,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				CONTENT = #{content,jdbcType=LONGVARCHAR},
			</if>
			<if test="sort != null">
				SORT = #{sort,jdbcType=INTEGER},
			</if>
			<if test="stateCode != null">
				STATECODE = #{stateCode,jdbcType=VARCHAR},
			</if>
			<if test="modifyUserId != null">
				MODIFYUSERID = #{modifyUserId,jdbcType=INTEGER},
			</if>
			<if test="modifyTime != null">
				MODIFYTIME = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="note != null">
				NOTE = #{note,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateById" parameterType="SystemAnnouncement">
		update S_SYSTEM_ANNOUNCEMENT
		set TITLE = #{title,jdbcType=VARCHAR},
		CONTENT = #{content,jdbcType=LONGVARCHAR},
		SORT = #{sort,jdbcType=INTEGER},
		STATECODE = #{stateCode,jdbcType=VARCHAR},
		MODIFYUSERID = #{modifyUserId,jdbcType=INTEGER},
		MODIFYTIME = #{modifyTime,jdbcType=TIMESTAMP},
		NOTE = #{note,jdbcType=VARCHAR}
		where ID = #{id,jdbcType=INTEGER}
	</update>


	<select id="loadById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from S_SYSTEM_ANNOUNCEMENT
		where ID = #{id,jdbcType=INTEGER}
	</select>


	<select id="list" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from S_SYSTEM_ANNOUNCEMENT
		ORDER BY ID DESC
	</select>

	<select id="listByStatus" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from S_SYSTEM_ANNOUNCEMENT
		where STATECODE = #{status,jdbcType=VARCHAR}
		ORDER BY ID DESC
	</select>

</mapper>