<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yilidi.o2o.user.dao.StoreProductSubsidyMapper">
	<resultMap id="BaseResultMap" type="StoreProductSubsidy">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="STOREID" property="storeId" jdbcType="INTEGER" />
		<result column="SALEORDERNO" property="saleOrderNo" jdbcType="VARCHAR" />
		<result column="SALEPRODUCTID" property="saleProductId" jdbcType="INTEGER" />
		<result column="PRODUCTNAME" property="productName" jdbcType="VARCHAR" />
		<result column="RETAILPRICE" property="retailPrice" jdbcType="BIGINT" />
		<result column="PROMOTIONALPRICE" property="promotionalPrice" jdbcType="BIGINT" />
		<result column="PRICESUBSIDY" property="priceSubsidy" jdbcType="BIGINT" />
		<result column="PRODUCTNUM" property="productNum" jdbcType="INTEGER" />
		<result column="TRANSWITHDRAWSTATUS" property="transWithdrawStatus" jdbcType="VARCHAR" />
		<result column="CREATEUSERID" property="createUserId" jdbcType="INTEGER" />
		<result column="CREATETIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="MODIFYUSERID" property="modifyUserId" jdbcType="INTEGER" />
		<result column="MODIFYTIME" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="REMARK" property="remark" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="StoreProductSubsidyInfoResultMap" type="StoreProductSubsidyInfo">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="STOREID" property="storeId" jdbcType="INTEGER" />
		<result column="STORENAME" property="storeName" jdbcType="VARCHAR" />
		<result column="STORECODE" property="storeCode" jdbcType="VARCHAR" />
		<result column="SALEORDERNO" property="saleOrderNo" jdbcType="VARCHAR" />
		<result column="SALEPRODUCTID" property="saleProductId" jdbcType="INTEGER" />
		<result column="PRODUCTNAME" property="productName" jdbcType="VARCHAR" />
		<result column="RETAILPRICE" property="retailPrice" jdbcType="BIGINT" />
		<result column="PROMOTIONALPRICE" property="promotionalPrice" jdbcType="BIGINT" />
		<result column="PRICESUBSIDY" property="priceSubsidy" jdbcType="BIGINT" />
		<result column="PRODUCTNUM" property="productNum" jdbcType="INTEGER" />
		<result column="TRANSWITHDRAWSTATUS" property="transWithdrawStatus" jdbcType="VARCHAR" />
		<result column="CREATEUSERID" property="createUserId" jdbcType="INTEGER" />
		<result column="CREATETIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="MODIFYUSERID" property="modifyUserId" jdbcType="INTEGER" />
		<result column="MODIFYTIME" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="REMARK" property="remark" jdbcType="VARCHAR" />
	</resultMap>
		
	<insert id="save" parameterType="StoreProductSubsidy" useGeneratedKeys="true" keyProperty="id">
		insert into U_STORE_PRODUCT_SUBSIDY
		(STOREID, SALEORDERNO,SALEPRODUCTID,PRODUCTNAME,RETAILPRICE,PROMOTIONALPRICE,PRICESUBSIDY,
		PRODUCTNUM,TRANSWITHDRAWSTATUS,CREATEUSERID,CREATETIME,MODIFYUSERID,MODIFYTIME,REMARK)
		values
		(#{storeId,jdbcType=INTEGER},#{saleOrderNo,jdbcType=VARCHAR},
		#{saleProductId,jdbcType=INTEGER},#{productName,jdbcType=VARCHAR},
		#{retailPrice,jdbcType=BIGINT},	#{promotionalPrice,jdbcType=BIGINT},
		#{priceSubsidy,jdbcType=BIGINT},#{productNum,jdbcType=INTEGER},
		#{transWithdrawStatus,jdbcType=VARCHAR},
		#{createUserId,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP},
		#{modifyUserId,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP},
		#{remark,jdbcType=VARCHAR})
	</insert>
			
	<select id="countPriceSubsidy" resultType="java.lang.Long" parameterType="java.lang.Integer">
		SELECT SUM(PRICESUBSIDY) from U_STORE_PRODUCT_SUBSIDY
		WHERE STOREID = #{storeId,jdbcType=INTEGER}
		GROUP BY STOREID
	</select>
			
	<select id="findStoreProductSubsidies" resultMap="StoreProductSubsidyInfoResultMap" parameterType="StoreProductSubsidyQuery">
		SELECT A.ID,A.STOREID,C.STORECODE,B.CUSTOMERNAME AS STORENAME,A.SALEORDERNO,A.PRODUCTNAME,
		A.RETAILPRICE,A.PROMOTIONALPRICE,A.PRODUCTNUM,A.PRICESUBSIDY,A.CREATETIME from U_STORE_PRODUCT_SUBSIDY A
		LEFT JOIN U_CUSTOMER B ON A.STOREID = B.ID
		LEFT JOIN U_STORE_PROFILE C ON A.STOREID = C.STOREID
		<where>
			1=1
			<if test="storeName != null">
				and B.CUSTOMERNAME LIKE CONCAT('%',#{storeName,jdbcType=VARCHAR},'%')
			</if>
			<if test="storeCode != null">
				and C.STORECODE = #{storeCode, jdbcType=VARCHAR}
			</if>
			<if test="storeId != null">
				and A.STOREID = #{storeId, jdbcType=INTEGER}
			</if>
			<if test="saleOrderNo">
				and A.SALEORDERNO = #{saleOrderNo, jdbcType=VARCHAR}
			</if>
			<if test="productName">
				and A.PRODUCTNAME LIKE CONCAT('%',#{productName,jdbcType=VARCHAR},'%')
			</if>
			<if test="startCreateTime != null">
				and A.CREATETIME &gt;= #{startCreateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="endCreateTime != null">
				and A.CREATETIME &lt;= #{endCreateTime, jdbcType=TIMESTAMP}
			</if>
		</where>
		<if test="order != null">
			order by ${order}
			<if test="sort != null">
				${sort}
			</if>
		</if>
	</select>
	
	<select id="listDataForExportProductSubsidy" resultMap="StoreProductSubsidyInfoResultMap">
		SELECT A.ID,A.STOREID,C.STORECODE,B.CUSTOMERNAME AS STORENAME,A.SALEORDERNO,A.PRODUCTNAME,
		A.RETAILPRICE,A.PROMOTIONALPRICE,A.PRODUCTNUM,A.PRICESUBSIDY,A.CREATETIME from U_STORE_PRODUCT_SUBSIDY A
		LEFT JOIN U_CUSTOMER B ON A.STOREID = B.ID
		LEFT JOIN U_STORE_PROFILE C ON A.STOREID = C.STOREID
		<where>
			1=1
			<if test="storeProductSubsidyQuery.storeName != null">
				and B.CUSTOMERNAME LIKE CONCAT('%',#{storeProductSubsidyQuery.storeName,jdbcType=VARCHAR},'%')
			</if>
			<if test="storeProductSubsidyQuery.storeCode != null">
				and C.STORECODE = #{storeProductSubsidyQuery.storeCode, jdbcType=VARCHAR}
			</if>
			<if test="storeProductSubsidyQuery.storeId != null">
				and A.STOREID = #{storeProductSubsidyQuery.storeId, jdbcType=INTEGER}
			</if>
			<if test="storeProductSubsidyQuery.saleOrderNo">
				and A.SALEORDERNO = #{storeProductSubsidyQuery.saleOrderNo, jdbcType=VARCHAR}
			</if>
			<if test="storeProductSubsidyQuery.productName">
				and A.PRODUCTNAME LIKE CONCAT('%',#{storeProductSubsidyQuery.productName,jdbcType=VARCHAR},'%')
			</if>
			<if test="storeProductSubsidyQuery.startCreateTime != null">
				and A.CREATETIME &gt;= #{storeProductSubsidyQuery.startCreateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="storeProductSubsidyQuery.endCreateTime != null">
				and A.CREATETIME &lt;= #{storeProductSubsidyQuery.endCreateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="storeProductSubsidyQuery.order != null">
				order by ${storeProductSubsidyQuery.order}
				<if test="storeProductSubsidyQuery.sort != null">
					${storeProductSubsidyQuery.sort}
				</if>
			</if>
		</where>
		limit #{startLineNum, jdbcType=BIGINT},#{pageSize, jdbcType=INTEGER}
	</select>
	
	<select id="getCountsForExportProductSubsidy" parameterType="StoreProductSubsidyQuery" resultType="java.lang.Long">
		SELECT COUNT(*) from U_STORE_PRODUCT_SUBSIDY A
		LEFT JOIN U_CUSTOMER B ON A.STOREID = B.ID
		LEFT JOIN U_STORE_PROFILE C ON A.STOREID = C.STOREID
		<where>
			1=1
			<if test="storeName != null">
				and B.CUSTOMERNAME LIKE CONCAT('%',#{storeName,jdbcType=VARCHAR},'%')
			</if>
			<if test="storeCode != null">
				and C.STORECODE = #{storeCode, jdbcType=VARCHAR}
			</if>
			<if test="storeId != null">
				and A.STOREID = #{storeId, jdbcType=INTEGER}
			</if>
			<if test="saleOrderNo">
				and A.SALEORDERNO = #{saleOrderNo, jdbcType=VARCHAR}
			</if>
			<if test="productName">
				and A.PRODUCTNAME LIKE CONCAT('%',#{productName,jdbcType=VARCHAR},'%')
			</if>
			<if test="startCreateTime != null">
				and A.CREATETIME &gt;= #{startCreateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="endCreateTime != null">
				and A.CREATETIME &lt;= #{endCreateTime, jdbcType=TIMESTAMP}
			</if>
		</where>
		<if test="order != null">
			order by ${order}
			<if test="sort != null">
				${sort}
			</if>
		</if>
	</select>

</mapper>