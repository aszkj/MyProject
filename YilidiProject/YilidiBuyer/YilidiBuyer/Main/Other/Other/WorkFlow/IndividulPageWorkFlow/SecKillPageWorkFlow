!秒杀活动页的workFlow
1=======================>刚进来的流程
==> A=>刚进该页面获取秒杀活动secKillActivitylist(<secKillActivityModel>)
==> B=>b1:根据当前时间currentDate(服务器的当前时间)和secKillActivitylist确定当前时间处于那个活动，b2:确定每个活动model的状态以及剩余时间leftCount(疯抢和即将开始状态有实际值，e:特殊情况下最后一个model处于疯抢中的话就用它的结束时间确定,f若处于已开始的话给特殊标志leftCount=-1001)，b3:并第一次开启定时器，开启定时器每个活动model的leftCount（有实际值的）都会倒计时
==> C=>(a:确定选中背景视图currentSelectedSecKillBgView的位置
      b:确定当前选中的活动模型currentSelectedSecKillActivityModel
      c:确定时间显示leftTimeLable的显示,计数取选中状态model的leftCount（若当前选中模型状态为即将开始，则显示距开始 leftCount, 若当前选中模型状态为疯抢中，则显示剩余 leftCount x1:若当前选中模型状态为已开始，则不显示）
      d:刷新该活动对应的商品列表)

2=======================>点击切换活动背景视图的流程
==> C(不需要开启定时器)

3=======================>某个活动模型的倒计时到了流程

==> D该活动模型处于选中状态下 1 该模型为即将开始状态 ==> d11:改变该模型的状态为疯抢中以及leftCount并刷新活动UI==>c==>d
                          2 该模型为疯抢中状态 ==> d21:改变该模型状态为已开始以及leftCount并刷新活动UI

==> E该活动模型非选中状态下
                          1 该模型为即将开始状态 ==> d11
                          2 该模型为疯抢中状态   ==> d21 ==>选中该活动模型==>C
4=======================>应用进入活动页面，开始倒计时，然后进入后台，过来一段时间再次进入前台，
//有可能时间过了很长，那么从后台再次进入该页面，可能几个活动模型的状态都需要改变，所以
==>b1=>b2




/**
*  修改地方，最后一场，就是没有下一场的话，如果正处于疯抢中，那么就根据最后一场的结束时间来处理
*  条件A==>若是最后一场，且是疯抢中
*  条件B==>若是最后一场，是即将开始
*  条件C==>该活动处于选中状态，

*  修改1==>刚进来确定每个活动的状态,若条件A成立，那么根据最后一场的结束时间来确定剩余时间
*  修改2==>某个活动定时到的时候，

    若条件C成立
        若条件A成立==>b3:修改该活动状态为已开始以及leftCount,以及活动UI==>c,d
        否条件B成立==>b4:修改该活动状态为疯抢中以及leftCount(根据最后一场的结束时间来处理)以及活动UI==>c,d
    若条件C不成立
        若条件A成立==>b3
        否条件B成立==>b4==>选中该活动模型==>C
*/





