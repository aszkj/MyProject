// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Message.pb.h"
// @@protoc_insertion_point(imports)

@implementation MessageRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [MessageRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ProtoMessage ()
@property (strong) NSString* accessToken;
@property (strong) NSString* broadcastId;
@property (strong) ProtoMessagePoint* geo;
@property (strong) ProtoMessageMessage* message;
@end

@implementation ProtoMessage

- (BOOL) hasAccessToken {
  return !!hasAccessToken_;
}
- (void) setHasAccessToken:(BOOL) _value_ {
  hasAccessToken_ = !!_value_;
}
@synthesize accessToken;
- (BOOL) hasBroadcastId {
  return !!hasBroadcastId_;
}
- (void) setHasBroadcastId:(BOOL) _value_ {
  hasBroadcastId_ = !!_value_;
}
@synthesize broadcastId;
- (BOOL) hasGeo {
  return !!hasGeo_;
}
- (void) setHasGeo:(BOOL) _value_ {
  hasGeo_ = !!_value_;
}
@synthesize geo;
- (BOOL) hasMessage {
  return !!hasMessage_;
}
- (void) setHasMessage:(BOOL) _value_ {
  hasMessage_ = !!_value_;
}
@synthesize message;
- (instancetype) init {
  if ((self = [super init])) {
    self.accessToken = @"";
    self.broadcastId = @"";
    self.geo = [ProtoMessagePoint defaultInstance];
    self.message = [ProtoMessageMessage defaultInstance];
  }
  return self;
}
static ProtoMessage* defaultProtoMessageInstance = nil;
+ (void) initialize {
  if (self == [ProtoMessage class]) {
    defaultProtoMessageInstance = [[ProtoMessage alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultProtoMessageInstance;
}
- (instancetype) defaultInstance {
  return defaultProtoMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMessage) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccessToken) {
    [output writeString:1 value:self.accessToken];
  }
  if (self.hasBroadcastId) {
    [output writeString:2 value:self.broadcastId];
  }
  if (self.hasGeo) {
    [output writeMessage:3 value:self.geo];
  }
  if (self.hasMessage) {
    [output writeMessage:4 value:self.message];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccessToken) {
    size_ += computeStringSize(1, self.accessToken);
  }
  if (self.hasBroadcastId) {
    size_ += computeStringSize(2, self.broadcastId);
  }
  if (self.hasGeo) {
    size_ += computeMessageSize(3, self.geo);
  }
  if (self.hasMessage) {
    size_ += computeMessageSize(4, self.message);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProtoMessage*) parseFromData:(NSData*) data {
  return (ProtoMessage*)[[[ProtoMessage builder] mergeFromData:data] build];
}
+ (ProtoMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessage*)[[[ProtoMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessage*) parseFromInputStream:(NSInputStream*) input {
  return (ProtoMessage*)[[[ProtoMessage builder] mergeFromInputStream:input] build];
}
+ (ProtoMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessage*)[[[ProtoMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProtoMessage*)[[[ProtoMessage builder] mergeFromCodedInputStream:input] build];
}
+ (ProtoMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessage*)[[[ProtoMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessageBuilder*) builder {
  return [[ProtoMessageBuilder alloc] init];
}
+ (ProtoMessageBuilder*) builderWithPrototype:(ProtoMessage*) prototype {
  return [[ProtoMessage builder] mergeFrom:prototype];
}
- (ProtoMessageBuilder*) builder {
  return [ProtoMessage builder];
}
- (ProtoMessageBuilder*) toBuilder {
  return [ProtoMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccessToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accessToken", self.accessToken];
  }
  if (self.hasBroadcastId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"broadcastId", self.broadcastId];
  }
  if (self.hasGeo) {
    [output appendFormat:@"%@%@ {\n", indent, @"geo"];
    [self.geo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasMessage) {
    [output appendFormat:@"%@%@ {\n", indent, @"message"];
    [self.message writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasAccessToken) {
    [dictionary setObject: self.accessToken forKey: @"accessToken"];
  }
  if (self.hasBroadcastId) {
    [dictionary setObject: self.broadcastId forKey: @"broadcastId"];
  }
  if (self.hasGeo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.geo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"geo"];
  }
  if (self.hasMessage) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.message storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"message"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ProtoMessage class]]) {
    return NO;
  }
  ProtoMessage *otherMessage = other;
  return
      self.hasAccessToken == otherMessage.hasAccessToken &&
      (!self.hasAccessToken || [self.accessToken isEqual:otherMessage.accessToken]) &&
      self.hasBroadcastId == otherMessage.hasBroadcastId &&
      (!self.hasBroadcastId || [self.broadcastId isEqual:otherMessage.broadcastId]) &&
      self.hasGeo == otherMessage.hasGeo &&
      (!self.hasGeo || [self.geo isEqual:otherMessage.geo]) &&
      self.hasMessage == otherMessage.hasMessage &&
      (!self.hasMessage || [self.message isEqual:otherMessage.message]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAccessToken) {
    hashCode = hashCode * 31 + [self.accessToken hash];
  }
  if (self.hasBroadcastId) {
    hashCode = hashCode * 31 + [self.broadcastId hash];
  }
  if (self.hasGeo) {
    hashCode = hashCode * 31 + [self.geo hash];
  }
  if (self.hasMessage) {
    hashCode = hashCode * 31 + [self.message hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL ProtoMessageModelIsValidValue(ProtoMessageModel value) {
  switch (value) {
    case ProtoMessageModelSystem:
    case ProtoMessageModelChat:
    case ProtoMessageModelBehaviour:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromProtoMessageModel(ProtoMessageModel value) {
  switch (value) {
    case ProtoMessageModelSystem:
      return @"ProtoMessageModelSystem";
    case ProtoMessageModelChat:
      return @"ProtoMessageModelChat";
    case ProtoMessageModelBehaviour:
      return @"ProtoMessageModelBehaviour";
    default:
      return nil;
  }
}

BOOL ProtoMessageContentTypeIsValidValue(ProtoMessageContentType value) {
  switch (value) {
    case ProtoMessageContentTypeImage:
    case ProtoMessageContentTypeMusic:
    case ProtoMessageContentTypeNews:
    case ProtoMessageContentTypeText:
    case ProtoMessageContentTypeVideo:
    case ProtoMessageContentTypeShortvideo:
    case ProtoMessageContentTypeVoice:
    case ProtoMessageContentTypeCompoment:
    case ProtoMessageContentTypeLocation:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromProtoMessageContentType(ProtoMessageContentType value) {
  switch (value) {
    case ProtoMessageContentTypeImage:
      return @"ProtoMessageContentTypeImage";
    case ProtoMessageContentTypeMusic:
      return @"ProtoMessageContentTypeMusic";
    case ProtoMessageContentTypeNews:
      return @"ProtoMessageContentTypeNews";
    case ProtoMessageContentTypeText:
      return @"ProtoMessageContentTypeText";
    case ProtoMessageContentTypeVideo:
      return @"ProtoMessageContentTypeVideo";
    case ProtoMessageContentTypeShortvideo:
      return @"ProtoMessageContentTypeShortvideo";
    case ProtoMessageContentTypeVoice:
      return @"ProtoMessageContentTypeVoice";
    case ProtoMessageContentTypeCompoment:
      return @"ProtoMessageContentTypeCompoment";
    case ProtoMessageContentTypeLocation:
      return @"ProtoMessageContentTypeLocation";
    default:
      return nil;
  }
}

BOOL ProtoMessageComponentViewTypeIsValidValue(ProtoMessageComponentViewType value) {
  switch (value) {
    case ProtoMessageComponentViewTypeDesc:
    case ProtoMessageComponentViewTypeDetail:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromProtoMessageComponentViewType(ProtoMessageComponentViewType value) {
  switch (value) {
    case ProtoMessageComponentViewTypeDesc:
      return @"ProtoMessageComponentViewTypeDesc";
    case ProtoMessageComponentViewTypeDetail:
      return @"ProtoMessageComponentViewTypeDetail";
    default:
      return nil;
  }
}

BOOL ProtoMessageComponentStatusIsValidValue(ProtoMessageComponentStatus value) {
  switch (value) {
    case ProtoMessageComponentStatusNormal:
    case ProtoMessageComponentStatusExpire:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromProtoMessageComponentStatus(ProtoMessageComponentStatus value) {
  switch (value) {
    case ProtoMessageComponentStatusNormal:
      return @"ProtoMessageComponentStatusNormal";
    case ProtoMessageComponentStatusExpire:
      return @"ProtoMessageComponentStatusExpire";
    default:
      return nil;
  }
}

BOOL ProtoMessageMessageTypeIsValidValue(ProtoMessageMessageType value) {
  switch (value) {
    case ProtoMessageMessageTypeSend:
    case ProtoMessageMessageTypeReceive:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromProtoMessageMessageType(ProtoMessageMessageType value) {
  switch (value) {
    case ProtoMessageMessageTypeSend:
      return @"ProtoMessageMessageTypeSend";
    case ProtoMessageMessageTypeReceive:
      return @"ProtoMessageMessageTypeReceive";
    default:
      return nil;
  }
}

@interface ProtoMessageComponent ()
@property (strong) NSString* id;
@property (strong) NSString* name;
@property (strong) NSString* url;
@property (strong) NSString* version;
@property (strong) NSString* desc;
@property ProtoMessageComponentViewType viewType;
@property ProtoMessageComponentStatus status;
@property (strong) NSString* orderCode;
@property (strong) NSString* taskId;
@end

@implementation ProtoMessageComponent

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasUrl {
  return !!hasUrl_;
}
- (void) setHasUrl:(BOOL) _value_ {
  hasUrl_ = !!_value_;
}
@synthesize url;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) _value_ {
  hasVersion_ = !!_value_;
}
@synthesize version;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) _value_ {
  hasDesc_ = !!_value_;
}
@synthesize desc;
- (BOOL) hasViewType {
  return !!hasViewType_;
}
- (void) setHasViewType:(BOOL) _value_ {
  hasViewType_ = !!_value_;
}
@synthesize viewType;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasOrderCode {
  return !!hasOrderCode_;
}
- (void) setHasOrderCode:(BOOL) _value_ {
  hasOrderCode_ = !!_value_;
}
@synthesize orderCode;
- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) _value_ {
  hasTaskId_ = !!_value_;
}
@synthesize taskId;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = @"";
    self.name = @"";
    self.url = @"";
    self.version = @"";
    self.desc = @"";
    self.viewType = ProtoMessageComponentViewTypeDesc;
    self.status = ProtoMessageComponentStatusNormal;
    self.orderCode = @"";
    self.taskId = @"";
  }
  return self;
}
static ProtoMessageComponent* defaultProtoMessageComponentInstance = nil;
+ (void) initialize {
  if (self == [ProtoMessageComponent class]) {
    defaultProtoMessageComponentInstance = [[ProtoMessageComponent alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultProtoMessageComponentInstance;
}
- (instancetype) defaultInstance {
  return defaultProtoMessageComponentInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasUrl) {
    [output writeString:3 value:self.url];
  }
  if (self.hasVersion) {
    [output writeString:4 value:self.version];
  }
  if (self.hasDesc) {
    [output writeString:6 value:self.desc];
  }
  if (self.hasViewType) {
    [output writeEnum:7 value:self.viewType];
  }
  if (self.hasStatus) {
    [output writeEnum:8 value:self.status];
  }
  if (self.hasOrderCode) {
    [output writeString:9 value:self.orderCode];
  }
  if (self.hasTaskId) {
    [output writeString:10 value:self.taskId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeStringSize(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasUrl) {
    size_ += computeStringSize(3, self.url);
  }
  if (self.hasVersion) {
    size_ += computeStringSize(4, self.version);
  }
  if (self.hasDesc) {
    size_ += computeStringSize(6, self.desc);
  }
  if (self.hasViewType) {
    size_ += computeEnumSize(7, self.viewType);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(8, self.status);
  }
  if (self.hasOrderCode) {
    size_ += computeStringSize(9, self.orderCode);
  }
  if (self.hasTaskId) {
    size_ += computeStringSize(10, self.taskId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProtoMessageComponent*) parseFromData:(NSData*) data {
  return (ProtoMessageComponent*)[[[ProtoMessageComponent builder] mergeFromData:data] build];
}
+ (ProtoMessageComponent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessageComponent*)[[[ProtoMessageComponent builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessageComponent*) parseFromInputStream:(NSInputStream*) input {
  return (ProtoMessageComponent*)[[[ProtoMessageComponent builder] mergeFromInputStream:input] build];
}
+ (ProtoMessageComponent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessageComponent*)[[[ProtoMessageComponent builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessageComponent*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProtoMessageComponent*)[[[ProtoMessageComponent builder] mergeFromCodedInputStream:input] build];
}
+ (ProtoMessageComponent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessageComponent*)[[[ProtoMessageComponent builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessageComponentBuilder*) builder {
  return [[ProtoMessageComponentBuilder alloc] init];
}
+ (ProtoMessageComponentBuilder*) builderWithPrototype:(ProtoMessageComponent*) prototype {
  return [[ProtoMessageComponent builder] mergeFrom:prototype];
}
- (ProtoMessageComponentBuilder*) builder {
  return [ProtoMessageComponent builder];
}
- (ProtoMessageComponentBuilder*) toBuilder {
  return [ProtoMessageComponent builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", self.id];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"url", self.url];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", self.version];
  }
  if (self.hasDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"desc", self.desc];
  }
  if (self.hasViewType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"viewType", NSStringFromProtoMessageComponentViewType(self.viewType)];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", NSStringFromProtoMessageComponentStatus(self.status)];
  }
  if (self.hasOrderCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"orderCode", self.orderCode];
  }
  if (self.hasTaskId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"taskId", self.taskId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: self.id forKey: @"id"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasUrl) {
    [dictionary setObject: self.url forKey: @"url"];
  }
  if (self.hasVersion) {
    [dictionary setObject: self.version forKey: @"version"];
  }
  if (self.hasDesc) {
    [dictionary setObject: self.desc forKey: @"desc"];
  }
  if (self.hasViewType) {
    [dictionary setObject: @(self.viewType) forKey: @"viewType"];
  }
  if (self.hasStatus) {
    [dictionary setObject: @(self.status) forKey: @"status"];
  }
  if (self.hasOrderCode) {
    [dictionary setObject: self.orderCode forKey: @"orderCode"];
  }
  if (self.hasTaskId) {
    [dictionary setObject: self.taskId forKey: @"taskId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ProtoMessageComponent class]]) {
    return NO;
  }
  ProtoMessageComponent *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || [self.id isEqual:otherMessage.id]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasUrl == otherMessage.hasUrl &&
      (!self.hasUrl || [self.url isEqual:otherMessage.url]) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || [self.version isEqual:otherMessage.version]) &&
      self.hasDesc == otherMessage.hasDesc &&
      (!self.hasDesc || [self.desc isEqual:otherMessage.desc]) &&
      self.hasViewType == otherMessage.hasViewType &&
      (!self.hasViewType || self.viewType == otherMessage.viewType) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasOrderCode == otherMessage.hasOrderCode &&
      (!self.hasOrderCode || [self.orderCode isEqual:otherMessage.orderCode]) &&
      self.hasTaskId == otherMessage.hasTaskId &&
      (!self.hasTaskId || [self.taskId isEqual:otherMessage.taskId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [self.id hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasUrl) {
    hashCode = hashCode * 31 + [self.url hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [self.version hash];
  }
  if (self.hasDesc) {
    hashCode = hashCode * 31 + [self.desc hash];
  }
  if (self.hasViewType) {
    hashCode = hashCode * 31 + self.viewType;
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasOrderCode) {
    hashCode = hashCode * 31 + [self.orderCode hash];
  }
  if (self.hasTaskId) {
    hashCode = hashCode * 31 + [self.taskId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ProtoMessageComponentBuilder()
@property (strong) ProtoMessageComponent* resultComponent;
@end

@implementation ProtoMessageComponentBuilder
@synthesize resultComponent;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultComponent = [[ProtoMessageComponent alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultComponent;
}
- (ProtoMessageComponentBuilder*) clear {
  self.resultComponent = [[ProtoMessageComponent alloc] init];
  return self;
}
- (ProtoMessageComponentBuilder*) clone {
  return [ProtoMessageComponent builderWithPrototype:resultComponent];
}
- (ProtoMessageComponent*) defaultInstance {
  return [ProtoMessageComponent defaultInstance];
}
- (ProtoMessageComponent*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProtoMessageComponent*) buildPartial {
  ProtoMessageComponent* returnMe = resultComponent;
  self.resultComponent = nil;
  return returnMe;
}
- (ProtoMessageComponentBuilder*) mergeFrom:(ProtoMessageComponent*) other {
  if (other == [ProtoMessageComponent defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasUrl) {
    [self setUrl:other.url];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  if (other.hasViewType) {
    [self setViewType:other.viewType];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasOrderCode) {
    [self setOrderCode:other.orderCode];
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProtoMessageComponentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProtoMessageComponentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setUrl:[input readString]];
        break;
      }
      case 34: {
        [self setVersion:[input readString]];
        break;
      }
      case 50: {
        [self setDesc:[input readString]];
        break;
      }
      case 56: {
        ProtoMessageComponentViewType value = (ProtoMessageComponentViewType)[input readEnum];
        if (ProtoMessageComponentViewTypeIsValidValue(value)) {
          [self setViewType:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
      case 64: {
        ProtoMessageComponentStatus value = (ProtoMessageComponentStatus)[input readEnum];
        if (ProtoMessageComponentStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:8 value:value];
        }
        break;
      }
      case 74: {
        [self setOrderCode:[input readString]];
        break;
      }
      case 82: {
        [self setTaskId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultComponent.hasId;
}
- (NSString*) id {
  return resultComponent.id;
}
- (ProtoMessageComponentBuilder*) setId:(NSString*) value {
  resultComponent.hasId = YES;
  resultComponent.id = value;
  return self;
}
- (ProtoMessageComponentBuilder*) clearId {
  resultComponent.hasId = NO;
  resultComponent.id = @"";
  return self;
}
- (BOOL) hasName {
  return resultComponent.hasName;
}
- (NSString*) name {
  return resultComponent.name;
}
- (ProtoMessageComponentBuilder*) setName:(NSString*) value {
  resultComponent.hasName = YES;
  resultComponent.name = value;
  return self;
}
- (ProtoMessageComponentBuilder*) clearName {
  resultComponent.hasName = NO;
  resultComponent.name = @"";
  return self;
}
- (BOOL) hasUrl {
  return resultComponent.hasUrl;
}
- (NSString*) url {
  return resultComponent.url;
}
- (ProtoMessageComponentBuilder*) setUrl:(NSString*) value {
  resultComponent.hasUrl = YES;
  resultComponent.url = value;
  return self;
}
- (ProtoMessageComponentBuilder*) clearUrl {
  resultComponent.hasUrl = NO;
  resultComponent.url = @"";
  return self;
}
- (BOOL) hasVersion {
  return resultComponent.hasVersion;
}
- (NSString*) version {
  return resultComponent.version;
}
- (ProtoMessageComponentBuilder*) setVersion:(NSString*) value {
  resultComponent.hasVersion = YES;
  resultComponent.version = value;
  return self;
}
- (ProtoMessageComponentBuilder*) clearVersion {
  resultComponent.hasVersion = NO;
  resultComponent.version = @"";
  return self;
}
- (BOOL) hasDesc {
  return resultComponent.hasDesc;
}
- (NSString*) desc {
  return resultComponent.desc;
}
- (ProtoMessageComponentBuilder*) setDesc:(NSString*) value {
  resultComponent.hasDesc = YES;
  resultComponent.desc = value;
  return self;
}
- (ProtoMessageComponentBuilder*) clearDesc {
  resultComponent.hasDesc = NO;
  resultComponent.desc = @"";
  return self;
}
- (BOOL) hasViewType {
  return resultComponent.hasViewType;
}
- (ProtoMessageComponentViewType) viewType {
  return resultComponent.viewType;
}
- (ProtoMessageComponentBuilder*) setViewType:(ProtoMessageComponentViewType) value {
  resultComponent.hasViewType = YES;
  resultComponent.viewType = value;
  return self;
}
- (ProtoMessageComponentBuilder*) clearViewType {
  resultComponent.hasViewType = NO;
  resultComponent.viewType = ProtoMessageComponentViewTypeDesc;
  return self;
}
- (BOOL) hasStatus {
  return resultComponent.hasStatus;
}
- (ProtoMessageComponentStatus) status {
  return resultComponent.status;
}
- (ProtoMessageComponentBuilder*) setStatus:(ProtoMessageComponentStatus) value {
  resultComponent.hasStatus = YES;
  resultComponent.status = value;
  return self;
}
- (ProtoMessageComponentBuilder*) clearStatus {
  resultComponent.hasStatus = NO;
  resultComponent.status = ProtoMessageComponentStatusNormal;
  return self;
}
- (BOOL) hasOrderCode {
  return resultComponent.hasOrderCode;
}
- (NSString*) orderCode {
  return resultComponent.orderCode;
}
- (ProtoMessageComponentBuilder*) setOrderCode:(NSString*) value {
  resultComponent.hasOrderCode = YES;
  resultComponent.orderCode = value;
  return self;
}
- (ProtoMessageComponentBuilder*) clearOrderCode {
  resultComponent.hasOrderCode = NO;
  resultComponent.orderCode = @"";
  return self;
}
- (BOOL) hasTaskId {
  return resultComponent.hasTaskId;
}
- (NSString*) taskId {
  return resultComponent.taskId;
}
- (ProtoMessageComponentBuilder*) setTaskId:(NSString*) value {
  resultComponent.hasTaskId = YES;
  resultComponent.taskId = value;
  return self;
}
- (ProtoMessageComponentBuilder*) clearTaskId {
  resultComponent.hasTaskId = NO;
  resultComponent.taskId = @"";
  return self;
}
@end

@interface ProtoMessageContent ()
@property ProtoMessageContentType msgtype;
@property (strong) NSString* content;
@property (strong) NSString* url;
@property (strong) NSString* picUrl;
@property (strong) NSString* mediaId;
@property (strong) NSString* format;
@property (strong) NSString* recognition;
@property (strong) NSString* locationX;
@property (strong) NSString* locationY;
@property (strong) NSString* scale;
@property (strong) NSString* label;
@property (strong) NSString* title;
@property (strong) NSString* pb_description;
@property SInt32 width;
@property SInt32 height;
@property (strong) NSString* code;
@property (strong) ProtoMessageComponent* component;
@property SInt64 duration;
@end

@implementation ProtoMessageContent

- (BOOL) hasMsgtype {
  return !!hasMsgtype_;
}
- (void) setHasMsgtype:(BOOL) _value_ {
  hasMsgtype_ = !!_value_;
}
@synthesize msgtype;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasUrl {
  return !!hasUrl_;
}
- (void) setHasUrl:(BOOL) _value_ {
  hasUrl_ = !!_value_;
}
@synthesize url;
- (BOOL) hasPicUrl {
  return !!hasPicUrl_;
}
- (void) setHasPicUrl:(BOOL) _value_ {
  hasPicUrl_ = !!_value_;
}
@synthesize picUrl;
- (BOOL) hasMediaId {
  return !!hasMediaId_;
}
- (void) setHasMediaId:(BOOL) _value_ {
  hasMediaId_ = !!_value_;
}
@synthesize mediaId;
- (BOOL) hasFormat {
  return !!hasFormat_;
}
- (void) setHasFormat:(BOOL) _value_ {
  hasFormat_ = !!_value_;
}
@synthesize format;
- (BOOL) hasRecognition {
  return !!hasRecognition_;
}
- (void) setHasRecognition:(BOOL) _value_ {
  hasRecognition_ = !!_value_;
}
@synthesize recognition;
- (BOOL) hasLocationX {
  return !!hasLocationX_;
}
- (void) setHasLocationX:(BOOL) _value_ {
  hasLocationX_ = !!_value_;
}
@synthesize locationX;
- (BOOL) hasLocationY {
  return !!hasLocationY_;
}
- (void) setHasLocationY:(BOOL) _value_ {
  hasLocationY_ = !!_value_;
}
@synthesize locationY;
- (BOOL) hasScale {
  return !!hasScale_;
}
- (void) setHasScale:(BOOL) _value_ {
  hasScale_ = !!_value_;
}
@synthesize scale;
- (BOOL) hasLabel {
  return !!hasLabel_;
}
- (void) setHasLabel:(BOOL) _value_ {
  hasLabel_ = !!_value_;
}
@synthesize label;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) _value_ {
  hasDescription_ = !!_value_;
}
@synthesize pb_description;
- (BOOL) hasWidth {
  return !!hasWidth_;
}
- (void) setHasWidth:(BOOL) _value_ {
  hasWidth_ = !!_value_;
}
@synthesize width;
- (BOOL) hasHeight {
  return !!hasHeight_;
}
- (void) setHasHeight:(BOOL) _value_ {
  hasHeight_ = !!_value_;
}
@synthesize height;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasComponent {
  return !!hasComponent_;
}
- (void) setHasComponent:(BOOL) _value_ {
  hasComponent_ = !!_value_;
}
@synthesize component;
- (BOOL) hasDuration {
  return !!hasDuration_;
}
- (void) setHasDuration:(BOOL) _value_ {
  hasDuration_ = !!_value_;
}
@synthesize duration;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgtype = ProtoMessageContentTypeImage;
    self.content = @"";
    self.url = @"";
    self.picUrl = @"";
    self.mediaId = @"";
    self.format = @"";
    self.recognition = @"";
    self.locationX = @"";
    self.locationY = @"";
    self.scale = @"";
    self.label = @"";
    self.title = @"";
    self.pb_description = @"";
    self.width = 0;
    self.height = 0;
    self.code = @"";
    self.component = [ProtoMessageComponent defaultInstance];
    self.duration = 0L;
  }
  return self;
}
static ProtoMessageContent* defaultProtoMessageContentInstance = nil;
+ (void) initialize {
  if (self == [ProtoMessageContent class]) {
    defaultProtoMessageContentInstance = [[ProtoMessageContent alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultProtoMessageContentInstance;
}
- (instancetype) defaultInstance {
  return defaultProtoMessageContentInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMsgtype) {
    [output writeEnum:1 value:self.msgtype];
  }
  if (self.hasContent) {
    [output writeString:2 value:self.content];
  }
  if (self.hasUrl) {
    [output writeString:3 value:self.url];
  }
  if (self.hasPicUrl) {
    [output writeString:4 value:self.picUrl];
  }
  if (self.hasMediaId) {
    [output writeString:5 value:self.mediaId];
  }
  if (self.hasFormat) {
    [output writeString:6 value:self.format];
  }
  if (self.hasRecognition) {
    [output writeString:7 value:self.recognition];
  }
  if (self.hasLocationX) {
    [output writeString:8 value:self.locationX];
  }
  if (self.hasLocationY) {
    [output writeString:9 value:self.locationY];
  }
  if (self.hasScale) {
    [output writeString:10 value:self.scale];
  }
  if (self.hasLabel) {
    [output writeString:11 value:self.label];
  }
  if (self.hasTitle) {
    [output writeString:12 value:self.title];
  }
  if (self.hasDescription) {
    [output writeString:13 value:self.pb_description];
  }
  if (self.hasWidth) {
    [output writeInt32:14 value:self.width];
  }
  if (self.hasHeight) {
    [output writeInt32:15 value:self.height];
  }
  if (self.hasCode) {
    [output writeString:16 value:self.code];
  }
  if (self.hasComponent) {
    [output writeMessage:17 value:self.component];
  }
  if (self.hasDuration) {
    [output writeInt64:18 value:self.duration];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMsgtype) {
    size_ += computeEnumSize(1, self.msgtype);
  }
  if (self.hasContent) {
    size_ += computeStringSize(2, self.content);
  }
  if (self.hasUrl) {
    size_ += computeStringSize(3, self.url);
  }
  if (self.hasPicUrl) {
    size_ += computeStringSize(4, self.picUrl);
  }
  if (self.hasMediaId) {
    size_ += computeStringSize(5, self.mediaId);
  }
  if (self.hasFormat) {
    size_ += computeStringSize(6, self.format);
  }
  if (self.hasRecognition) {
    size_ += computeStringSize(7, self.recognition);
  }
  if (self.hasLocationX) {
    size_ += computeStringSize(8, self.locationX);
  }
  if (self.hasLocationY) {
    size_ += computeStringSize(9, self.locationY);
  }
  if (self.hasScale) {
    size_ += computeStringSize(10, self.scale);
  }
  if (self.hasLabel) {
    size_ += computeStringSize(11, self.label);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(12, self.title);
  }
  if (self.hasDescription) {
    size_ += computeStringSize(13, self.pb_description);
  }
  if (self.hasWidth) {
    size_ += computeInt32Size(14, self.width);
  }
  if (self.hasHeight) {
    size_ += computeInt32Size(15, self.height);
  }
  if (self.hasCode) {
    size_ += computeStringSize(16, self.code);
  }
  if (self.hasComponent) {
    size_ += computeMessageSize(17, self.component);
  }
  if (self.hasDuration) {
    size_ += computeInt64Size(18, self.duration);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProtoMessageContent*) parseFromData:(NSData*) data {
  return (ProtoMessageContent*)[[[ProtoMessageContent builder] mergeFromData:data] build];
}
+ (ProtoMessageContent*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessageContent*)[[[ProtoMessageContent builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessageContent*) parseFromInputStream:(NSInputStream*) input {
  return (ProtoMessageContent*)[[[ProtoMessageContent builder] mergeFromInputStream:input] build];
}
+ (ProtoMessageContent*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessageContent*)[[[ProtoMessageContent builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessageContent*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProtoMessageContent*)[[[ProtoMessageContent builder] mergeFromCodedInputStream:input] build];
}
+ (ProtoMessageContent*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessageContent*)[[[ProtoMessageContent builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessageContentBuilder*) builder {
  return [[ProtoMessageContentBuilder alloc] init];
}
+ (ProtoMessageContentBuilder*) builderWithPrototype:(ProtoMessageContent*) prototype {
  return [[ProtoMessageContent builder] mergeFrom:prototype];
}
- (ProtoMessageContentBuilder*) builder {
  return [ProtoMessageContent builder];
}
- (ProtoMessageContentBuilder*) toBuilder {
  return [ProtoMessageContent builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMsgtype) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgtype", NSStringFromProtoMessageContentType(self.msgtype)];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"url", self.url];
  }
  if (self.hasPicUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"picUrl", self.picUrl];
  }
  if (self.hasMediaId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mediaId", self.mediaId];
  }
  if (self.hasFormat) {
    [output appendFormat:@"%@%@: %@\n", indent, @"format", self.format];
  }
  if (self.hasRecognition) {
    [output appendFormat:@"%@%@: %@\n", indent, @"recognition", self.recognition];
  }
  if (self.hasLocationX) {
    [output appendFormat:@"%@%@: %@\n", indent, @"locationX", self.locationX];
  }
  if (self.hasLocationY) {
    [output appendFormat:@"%@%@: %@\n", indent, @"locationY", self.locationY];
  }
  if (self.hasScale) {
    [output appendFormat:@"%@%@: %@\n", indent, @"scale", self.scale];
  }
  if (self.hasLabel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"label", self.label];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pb_description", self.pb_description];
  }
  if (self.hasWidth) {
    [output appendFormat:@"%@%@: %@\n", indent, @"width", [NSNumber numberWithInteger:self.width]];
  }
  if (self.hasHeight) {
    [output appendFormat:@"%@%@: %@\n", indent, @"height", [NSNumber numberWithInteger:self.height]];
  }
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasComponent) {
    [output appendFormat:@"%@%@ {\n", indent, @"component"];
    [self.component writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasDuration) {
    [output appendFormat:@"%@%@: %@\n", indent, @"duration", [NSNumber numberWithLongLong:self.duration]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMsgtype) {
    [dictionary setObject: @(self.msgtype) forKey: @"msgtype"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasUrl) {
    [dictionary setObject: self.url forKey: @"url"];
  }
  if (self.hasPicUrl) {
    [dictionary setObject: self.picUrl forKey: @"picUrl"];
  }
  if (self.hasMediaId) {
    [dictionary setObject: self.mediaId forKey: @"mediaId"];
  }
  if (self.hasFormat) {
    [dictionary setObject: self.format forKey: @"format"];
  }
  if (self.hasRecognition) {
    [dictionary setObject: self.recognition forKey: @"recognition"];
  }
  if (self.hasLocationX) {
    [dictionary setObject: self.locationX forKey: @"locationX"];
  }
  if (self.hasLocationY) {
    [dictionary setObject: self.locationY forKey: @"locationY"];
  }
  if (self.hasScale) {
    [dictionary setObject: self.scale forKey: @"scale"];
  }
  if (self.hasLabel) {
    [dictionary setObject: self.label forKey: @"label"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasDescription) {
    [dictionary setObject: self.pb_description forKey: @"pb_description"];
  }
  if (self.hasWidth) {
    [dictionary setObject: [NSNumber numberWithInteger:self.width] forKey: @"width"];
  }
  if (self.hasHeight) {
    [dictionary setObject: [NSNumber numberWithInteger:self.height] forKey: @"height"];
  }
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasComponent) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.component storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"component"];
  }
  if (self.hasDuration) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.duration] forKey: @"duration"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ProtoMessageContent class]]) {
    return NO;
  }
  ProtoMessageContent *otherMessage = other;
  return
      self.hasMsgtype == otherMessage.hasMsgtype &&
      (!self.hasMsgtype || self.msgtype == otherMessage.msgtype) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasUrl == otherMessage.hasUrl &&
      (!self.hasUrl || [self.url isEqual:otherMessage.url]) &&
      self.hasPicUrl == otherMessage.hasPicUrl &&
      (!self.hasPicUrl || [self.picUrl isEqual:otherMessage.picUrl]) &&
      self.hasMediaId == otherMessage.hasMediaId &&
      (!self.hasMediaId || [self.mediaId isEqual:otherMessage.mediaId]) &&
      self.hasFormat == otherMessage.hasFormat &&
      (!self.hasFormat || [self.format isEqual:otherMessage.format]) &&
      self.hasRecognition == otherMessage.hasRecognition &&
      (!self.hasRecognition || [self.recognition isEqual:otherMessage.recognition]) &&
      self.hasLocationX == otherMessage.hasLocationX &&
      (!self.hasLocationX || [self.locationX isEqual:otherMessage.locationX]) &&
      self.hasLocationY == otherMessage.hasLocationY &&
      (!self.hasLocationY || [self.locationY isEqual:otherMessage.locationY]) &&
      self.hasScale == otherMessage.hasScale &&
      (!self.hasScale || [self.scale isEqual:otherMessage.scale]) &&
      self.hasLabel == otherMessage.hasLabel &&
      (!self.hasLabel || [self.label isEqual:otherMessage.label]) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasDescription == otherMessage.hasDescription &&
      (!self.hasDescription || [self.pb_description isEqual:otherMessage.pb_description]) &&
      self.hasWidth == otherMessage.hasWidth &&
      (!self.hasWidth || self.width == otherMessage.width) &&
      self.hasHeight == otherMessage.hasHeight &&
      (!self.hasHeight || self.height == otherMessage.height) &&
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasComponent == otherMessage.hasComponent &&
      (!self.hasComponent || [self.component isEqual:otherMessage.component]) &&
      self.hasDuration == otherMessage.hasDuration &&
      (!self.hasDuration || self.duration == otherMessage.duration) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMsgtype) {
    hashCode = hashCode * 31 + self.msgtype;
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasUrl) {
    hashCode = hashCode * 31 + [self.url hash];
  }
  if (self.hasPicUrl) {
    hashCode = hashCode * 31 + [self.picUrl hash];
  }
  if (self.hasMediaId) {
    hashCode = hashCode * 31 + [self.mediaId hash];
  }
  if (self.hasFormat) {
    hashCode = hashCode * 31 + [self.format hash];
  }
  if (self.hasRecognition) {
    hashCode = hashCode * 31 + [self.recognition hash];
  }
  if (self.hasLocationX) {
    hashCode = hashCode * 31 + [self.locationX hash];
  }
  if (self.hasLocationY) {
    hashCode = hashCode * 31 + [self.locationY hash];
  }
  if (self.hasScale) {
    hashCode = hashCode * 31 + [self.scale hash];
  }
  if (self.hasLabel) {
    hashCode = hashCode * 31 + [self.label hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasDescription) {
    hashCode = hashCode * 31 + [self.pb_description hash];
  }
  if (self.hasWidth) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.width] hash];
  }
  if (self.hasHeight) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.height] hash];
  }
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasComponent) {
    hashCode = hashCode * 31 + [self.component hash];
  }
  if (self.hasDuration) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.duration] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ProtoMessageContentBuilder()
@property (strong) ProtoMessageContent* resultContent;
@end

@implementation ProtoMessageContentBuilder
@synthesize resultContent;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultContent = [[ProtoMessageContent alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultContent;
}
- (ProtoMessageContentBuilder*) clear {
  self.resultContent = [[ProtoMessageContent alloc] init];
  return self;
}
- (ProtoMessageContentBuilder*) clone {
  return [ProtoMessageContent builderWithPrototype:resultContent];
}
- (ProtoMessageContent*) defaultInstance {
  return [ProtoMessageContent defaultInstance];
}
- (ProtoMessageContent*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProtoMessageContent*) buildPartial {
  ProtoMessageContent* returnMe = resultContent;
  self.resultContent = nil;
  return returnMe;
}
- (ProtoMessageContentBuilder*) mergeFrom:(ProtoMessageContent*) other {
  if (other == [ProtoMessageContent defaultInstance]) {
    return self;
  }
  if (other.hasMsgtype) {
    [self setMsgtype:other.msgtype];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasUrl) {
    [self setUrl:other.url];
  }
  if (other.hasPicUrl) {
    [self setPicUrl:other.picUrl];
  }
  if (other.hasMediaId) {
    [self setMediaId:other.mediaId];
  }
  if (other.hasFormat) {
    [self setFormat:other.format];
  }
  if (other.hasRecognition) {
    [self setRecognition:other.recognition];
  }
  if (other.hasLocationX) {
    [self setLocationX:other.locationX];
  }
  if (other.hasLocationY) {
    [self setLocationY:other.locationY];
  }
  if (other.hasScale) {
    [self setScale:other.scale];
  }
  if (other.hasLabel) {
    [self setLabel:other.label];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasDescription) {
    [self setDescription:other.pb_description];
  }
  if (other.hasWidth) {
    [self setWidth:other.width];
  }
  if (other.hasHeight) {
    [self setHeight:other.height];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasComponent) {
    [self mergeComponent:other.component];
  }
  if (other.hasDuration) {
    [self setDuration:other.duration];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProtoMessageContentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProtoMessageContentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        ProtoMessageContentType value = (ProtoMessageContentType)[input readEnum];
        if (ProtoMessageContentTypeIsValidValue(value)) {
          [self setMsgtype:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setContent:[input readString]];
        break;
      }
      case 26: {
        [self setUrl:[input readString]];
        break;
      }
      case 34: {
        [self setPicUrl:[input readString]];
        break;
      }
      case 42: {
        [self setMediaId:[input readString]];
        break;
      }
      case 50: {
        [self setFormat:[input readString]];
        break;
      }
      case 58: {
        [self setRecognition:[input readString]];
        break;
      }
      case 66: {
        [self setLocationX:[input readString]];
        break;
      }
      case 74: {
        [self setLocationY:[input readString]];
        break;
      }
      case 82: {
        [self setScale:[input readString]];
        break;
      }
      case 90: {
        [self setLabel:[input readString]];
        break;
      }
      case 98: {
        [self setTitle:[input readString]];
        break;
      }
      case 106: {
        [self setDescription:[input readString]];
        break;
      }
      case 112: {
        [self setWidth:[input readInt32]];
        break;
      }
      case 120: {
        [self setHeight:[input readInt32]];
        break;
      }
      case 130: {
        [self setCode:[input readString]];
        break;
      }
      case 138: {
        ProtoMessageComponentBuilder* subBuilder = [ProtoMessageComponent builder];
        if (self.hasComponent) {
          [subBuilder mergeFrom:self.component];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setComponent:[subBuilder buildPartial]];
        break;
      }
      case 144: {
        [self setDuration:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMsgtype {
  return resultContent.hasMsgtype;
}
- (ProtoMessageContentType) msgtype {
  return resultContent.msgtype;
}
- (ProtoMessageContentBuilder*) setMsgtype:(ProtoMessageContentType) value {
  resultContent.hasMsgtype = YES;
  resultContent.msgtype = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearMsgtype {
  resultContent.hasMsgtype = NO;
  resultContent.msgtype = ProtoMessageContentTypeImage;
  return self;
}
- (BOOL) hasContent {
  return resultContent.hasContent;
}
- (NSString*) content {
  return resultContent.content;
}
- (ProtoMessageContentBuilder*) setContent:(NSString*) value {
  resultContent.hasContent = YES;
  resultContent.content = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearContent {
  resultContent.hasContent = NO;
  resultContent.content = @"";
  return self;
}
- (BOOL) hasUrl {
  return resultContent.hasUrl;
}
- (NSString*) url {
  return resultContent.url;
}
- (ProtoMessageContentBuilder*) setUrl:(NSString*) value {
  resultContent.hasUrl = YES;
  resultContent.url = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearUrl {
  resultContent.hasUrl = NO;
  resultContent.url = @"";
  return self;
}
- (BOOL) hasPicUrl {
  return resultContent.hasPicUrl;
}
- (NSString*) picUrl {
  return resultContent.picUrl;
}
- (ProtoMessageContentBuilder*) setPicUrl:(NSString*) value {
  resultContent.hasPicUrl = YES;
  resultContent.picUrl = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearPicUrl {
  resultContent.hasPicUrl = NO;
  resultContent.picUrl = @"";
  return self;
}
- (BOOL) hasMediaId {
  return resultContent.hasMediaId;
}
- (NSString*) mediaId {
  return resultContent.mediaId;
}
- (ProtoMessageContentBuilder*) setMediaId:(NSString*) value {
  resultContent.hasMediaId = YES;
  resultContent.mediaId = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearMediaId {
  resultContent.hasMediaId = NO;
  resultContent.mediaId = @"";
  return self;
}
- (BOOL) hasFormat {
  return resultContent.hasFormat;
}
- (NSString*) format {
  return resultContent.format;
}
- (ProtoMessageContentBuilder*) setFormat:(NSString*) value {
  resultContent.hasFormat = YES;
  resultContent.format = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearFormat {
  resultContent.hasFormat = NO;
  resultContent.format = @"";
  return self;
}
- (BOOL) hasRecognition {
  return resultContent.hasRecognition;
}
- (NSString*) recognition {
  return resultContent.recognition;
}
- (ProtoMessageContentBuilder*) setRecognition:(NSString*) value {
  resultContent.hasRecognition = YES;
  resultContent.recognition = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearRecognition {
  resultContent.hasRecognition = NO;
  resultContent.recognition = @"";
  return self;
}
- (BOOL) hasLocationX {
  return resultContent.hasLocationX;
}
- (NSString*) locationX {
  return resultContent.locationX;
}
- (ProtoMessageContentBuilder*) setLocationX:(NSString*) value {
  resultContent.hasLocationX = YES;
  resultContent.locationX = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearLocationX {
  resultContent.hasLocationX = NO;
  resultContent.locationX = @"";
  return self;
}
- (BOOL) hasLocationY {
  return resultContent.hasLocationY;
}
- (NSString*) locationY {
  return resultContent.locationY;
}
- (ProtoMessageContentBuilder*) setLocationY:(NSString*) value {
  resultContent.hasLocationY = YES;
  resultContent.locationY = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearLocationY {
  resultContent.hasLocationY = NO;
  resultContent.locationY = @"";
  return self;
}
- (BOOL) hasScale {
  return resultContent.hasScale;
}
- (NSString*) scale {
  return resultContent.scale;
}
- (ProtoMessageContentBuilder*) setScale:(NSString*) value {
  resultContent.hasScale = YES;
  resultContent.scale = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearScale {
  resultContent.hasScale = NO;
  resultContent.scale = @"";
  return self;
}
- (BOOL) hasLabel {
  return resultContent.hasLabel;
}
- (NSString*) label {
  return resultContent.label;
}
- (ProtoMessageContentBuilder*) setLabel:(NSString*) value {
  resultContent.hasLabel = YES;
  resultContent.label = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearLabel {
  resultContent.hasLabel = NO;
  resultContent.label = @"";
  return self;
}
- (BOOL) hasTitle {
  return resultContent.hasTitle;
}
- (NSString*) title {
  return resultContent.title;
}
- (ProtoMessageContentBuilder*) setTitle:(NSString*) value {
  resultContent.hasTitle = YES;
  resultContent.title = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearTitle {
  resultContent.hasTitle = NO;
  resultContent.title = @"";
  return self;
}
- (BOOL) hasDescription {
  return resultContent.hasDescription;
}
- (NSString*) pb_description {
  return resultContent.pb_description;
}
- (ProtoMessageContentBuilder*) setDescription:(NSString*) value {
  resultContent.hasDescription = YES;
  resultContent.pb_description = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearDescription {
  resultContent.hasDescription = NO;
  resultContent.pb_description = @"";
  return self;
}
- (BOOL) hasWidth {
  return resultContent.hasWidth;
}
- (SInt32) width {
  return resultContent.width;
}
- (ProtoMessageContentBuilder*) setWidth:(SInt32) value {
  resultContent.hasWidth = YES;
  resultContent.width = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearWidth {
  resultContent.hasWidth = NO;
  resultContent.width = 0;
  return self;
}
- (BOOL) hasHeight {
  return resultContent.hasHeight;
}
- (SInt32) height {
  return resultContent.height;
}
- (ProtoMessageContentBuilder*) setHeight:(SInt32) value {
  resultContent.hasHeight = YES;
  resultContent.height = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearHeight {
  resultContent.hasHeight = NO;
  resultContent.height = 0;
  return self;
}
- (BOOL) hasCode {
  return resultContent.hasCode;
}
- (NSString*) code {
  return resultContent.code;
}
- (ProtoMessageContentBuilder*) setCode:(NSString*) value {
  resultContent.hasCode = YES;
  resultContent.code = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearCode {
  resultContent.hasCode = NO;
  resultContent.code = @"";
  return self;
}
- (BOOL) hasComponent {
  return resultContent.hasComponent;
}
- (ProtoMessageComponent*) component {
  return resultContent.component;
}
- (ProtoMessageContentBuilder*) setComponent:(ProtoMessageComponent*) value {
  resultContent.hasComponent = YES;
  resultContent.component = value;
  return self;
}
- (ProtoMessageContentBuilder*) setComponentBuilder:(ProtoMessageComponentBuilder*) builderForValue {
  return [self setComponent:[builderForValue build]];
}
- (ProtoMessageContentBuilder*) mergeComponent:(ProtoMessageComponent*) value {
  if (resultContent.hasComponent &&
      resultContent.component != [ProtoMessageComponent defaultInstance]) {
    resultContent.component =
      [[[ProtoMessageComponent builderWithPrototype:resultContent.component] mergeFrom:value] buildPartial];
  } else {
    resultContent.component = value;
  }
  resultContent.hasComponent = YES;
  return self;
}
- (ProtoMessageContentBuilder*) clearComponent {
  resultContent.hasComponent = NO;
  resultContent.component = [ProtoMessageComponent defaultInstance];
  return self;
}
- (BOOL) hasDuration {
  return resultContent.hasDuration;
}
- (SInt64) duration {
  return resultContent.duration;
}
- (ProtoMessageContentBuilder*) setDuration:(SInt64) value {
  resultContent.hasDuration = YES;
  resultContent.duration = value;
  return self;
}
- (ProtoMessageContentBuilder*) clearDuration {
  resultContent.hasDuration = NO;
  resultContent.duration = 0L;
  return self;
}
@end

@interface ProtoMessageMessage ()
@property ProtoMessageModel model;
@property (strong) ProtoMessageContent* content;
@property (strong) NSString* channel;
@property (strong) NSString* id;
@property (strong) NSString* localId;
@property ProtoMessageMessageType msgType;
@property (strong) NSString* uid;
@property SInt64 timestamp;
@property (strong) NSString* ownerId;
@end

@implementation ProtoMessageMessage

- (BOOL) hasModel {
  return !!hasModel_;
}
- (void) setHasModel:(BOOL) _value_ {
  hasModel_ = !!_value_;
}
@synthesize model;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasChannel {
  return !!hasChannel_;
}
- (void) setHasChannel:(BOOL) _value_ {
  hasChannel_ = !!_value_;
}
@synthesize channel;
- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasLocalId {
  return !!hasLocalId_;
}
- (void) setHasLocalId:(BOOL) _value_ {
  hasLocalId_ = !!_value_;
}
@synthesize localId;
- (BOOL) hasMsgType {
  return !!hasMsgType_;
}
- (void) setHasMsgType:(BOOL) _value_ {
  hasMsgType_ = !!_value_;
}
@synthesize msgType;
- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) _value_ {
  hasTimestamp_ = !!_value_;
}
@synthesize timestamp;
- (BOOL) hasOwnerId {
  return !!hasOwnerId_;
}
- (void) setHasOwnerId:(BOOL) _value_ {
  hasOwnerId_ = !!_value_;
}
@synthesize ownerId;
- (instancetype) init {
  if ((self = [super init])) {
    self.model = ProtoMessageModelSystem;
    self.content = [ProtoMessageContent defaultInstance];
    self.channel = @"";
    self.id = @"";
    self.localId = @"";
    self.msgType = ProtoMessageMessageTypeReceive;
    self.uid = @"";
    self.timestamp = 0L;
    self.ownerId = @"";
  }
  return self;
}
static ProtoMessageMessage* defaultProtoMessageMessageInstance = nil;
+ (void) initialize {
  if (self == [ProtoMessageMessage class]) {
    defaultProtoMessageMessageInstance = [[ProtoMessageMessage alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultProtoMessageMessageInstance;
}
- (instancetype) defaultInstance {
  return defaultProtoMessageMessageInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasModel) {
    [output writeEnum:1 value:self.model];
  }
  if (self.hasContent) {
    [output writeMessage:2 value:self.content];
  }
  if (self.hasChannel) {
    [output writeString:3 value:self.channel];
  }
  if (self.hasId) {
    [output writeString:4 value:self.id];
  }
  if (self.hasLocalId) {
    [output writeString:5 value:self.localId];
  }
  if (self.hasMsgType) {
    [output writeEnum:6 value:self.msgType];
  }
  if (self.hasUid) {
    [output writeString:7 value:self.uid];
  }
  if (self.hasTimestamp) {
    [output writeInt64:8 value:self.timestamp];
  }
  if (self.hasOwnerId) {
    [output writeString:9 value:self.ownerId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasModel) {
    size_ += computeEnumSize(1, self.model);
  }
  if (self.hasContent) {
    size_ += computeMessageSize(2, self.content);
  }
  if (self.hasChannel) {
    size_ += computeStringSize(3, self.channel);
  }
  if (self.hasId) {
    size_ += computeStringSize(4, self.id);
  }
  if (self.hasLocalId) {
    size_ += computeStringSize(5, self.localId);
  }
  if (self.hasMsgType) {
    size_ += computeEnumSize(6, self.msgType);
  }
  if (self.hasUid) {
    size_ += computeStringSize(7, self.uid);
  }
  if (self.hasTimestamp) {
    size_ += computeInt64Size(8, self.timestamp);
  }
  if (self.hasOwnerId) {
    size_ += computeStringSize(9, self.ownerId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProtoMessageMessage*) parseFromData:(NSData*) data {
  return (ProtoMessageMessage*)[[[ProtoMessageMessage builder] mergeFromData:data] build];
}
+ (ProtoMessageMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessageMessage*)[[[ProtoMessageMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessageMessage*) parseFromInputStream:(NSInputStream*) input {
  return (ProtoMessageMessage*)[[[ProtoMessageMessage builder] mergeFromInputStream:input] build];
}
+ (ProtoMessageMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessageMessage*)[[[ProtoMessageMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessageMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProtoMessageMessage*)[[[ProtoMessageMessage builder] mergeFromCodedInputStream:input] build];
}
+ (ProtoMessageMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessageMessage*)[[[ProtoMessageMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessageMessageBuilder*) builder {
  return [[ProtoMessageMessageBuilder alloc] init];
}
+ (ProtoMessageMessageBuilder*) builderWithPrototype:(ProtoMessageMessage*) prototype {
  return [[ProtoMessageMessage builder] mergeFrom:prototype];
}
- (ProtoMessageMessageBuilder*) builder {
  return [ProtoMessageMessage builder];
}
- (ProtoMessageMessageBuilder*) toBuilder {
  return [ProtoMessageMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasModel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"model", NSStringFromProtoMessageModel(self.model)];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@ {\n", indent, @"content"];
    [self.content writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasChannel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"channel", self.channel];
  }
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", self.id];
  }
  if (self.hasLocalId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"localId", self.localId];
  }
  if (self.hasMsgType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgType", NSStringFromProtoMessageMessageType(self.msgType)];
  }
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", self.uid];
  }
  if (self.hasTimestamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"timestamp", [NSNumber numberWithLongLong:self.timestamp]];
  }
  if (self.hasOwnerId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ownerId", self.ownerId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasModel) {
    [dictionary setObject: @(self.model) forKey: @"model"];
  }
  if (self.hasContent) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.content storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"content"];
  }
  if (self.hasChannel) {
    [dictionary setObject: self.channel forKey: @"channel"];
  }
  if (self.hasId) {
    [dictionary setObject: self.id forKey: @"id"];
  }
  if (self.hasLocalId) {
    [dictionary setObject: self.localId forKey: @"localId"];
  }
  if (self.hasMsgType) {
    [dictionary setObject: @(self.msgType) forKey: @"msgType"];
  }
  if (self.hasUid) {
    [dictionary setObject: self.uid forKey: @"uid"];
  }
  if (self.hasTimestamp) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.timestamp] forKey: @"timestamp"];
  }
  if (self.hasOwnerId) {
    [dictionary setObject: self.ownerId forKey: @"ownerId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ProtoMessageMessage class]]) {
    return NO;
  }
  ProtoMessageMessage *otherMessage = other;
  return
      self.hasModel == otherMessage.hasModel &&
      (!self.hasModel || self.model == otherMessage.model) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasChannel == otherMessage.hasChannel &&
      (!self.hasChannel || [self.channel isEqual:otherMessage.channel]) &&
      self.hasId == otherMessage.hasId &&
      (!self.hasId || [self.id isEqual:otherMessage.id]) &&
      self.hasLocalId == otherMessage.hasLocalId &&
      (!self.hasLocalId || [self.localId isEqual:otherMessage.localId]) &&
      self.hasMsgType == otherMessage.hasMsgType &&
      (!self.hasMsgType || self.msgType == otherMessage.msgType) &&
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || [self.uid isEqual:otherMessage.uid]) &&
      self.hasTimestamp == otherMessage.hasTimestamp &&
      (!self.hasTimestamp || self.timestamp == otherMessage.timestamp) &&
      self.hasOwnerId == otherMessage.hasOwnerId &&
      (!self.hasOwnerId || [self.ownerId isEqual:otherMessage.ownerId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasModel) {
    hashCode = hashCode * 31 + self.model;
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasChannel) {
    hashCode = hashCode * 31 + [self.channel hash];
  }
  if (self.hasId) {
    hashCode = hashCode * 31 + [self.id hash];
  }
  if (self.hasLocalId) {
    hashCode = hashCode * 31 + [self.localId hash];
  }
  if (self.hasMsgType) {
    hashCode = hashCode * 31 + self.msgType;
  }
  if (self.hasUid) {
    hashCode = hashCode * 31 + [self.uid hash];
  }
  if (self.hasTimestamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.timestamp] hash];
  }
  if (self.hasOwnerId) {
    hashCode = hashCode * 31 + [self.ownerId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ProtoMessageMessageBuilder()
@property (strong) ProtoMessageMessage* resultMessage;
@end

@implementation ProtoMessageMessageBuilder
@synthesize resultMessage;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMessage = [[ProtoMessageMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMessage;
}
- (ProtoMessageMessageBuilder*) clear {
  self.resultMessage = [[ProtoMessageMessage alloc] init];
  return self;
}
- (ProtoMessageMessageBuilder*) clone {
  return [ProtoMessageMessage builderWithPrototype:resultMessage];
}
- (ProtoMessageMessage*) defaultInstance {
  return [ProtoMessageMessage defaultInstance];
}
- (ProtoMessageMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProtoMessageMessage*) buildPartial {
  ProtoMessageMessage* returnMe = resultMessage;
  self.resultMessage = nil;
  return returnMe;
}
- (ProtoMessageMessageBuilder*) mergeFrom:(ProtoMessageMessage*) other {
  if (other == [ProtoMessageMessage defaultInstance]) {
    return self;
  }
  if (other.hasModel) {
    [self setModel:other.model];
  }
  if (other.hasContent) {
    [self mergeContent:other.content];
  }
  if (other.hasChannel) {
    [self setChannel:other.channel];
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasLocalId) {
    [self setLocalId:other.localId];
  }
  if (other.hasMsgType) {
    [self setMsgType:other.msgType];
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.hasOwnerId) {
    [self setOwnerId:other.ownerId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProtoMessageMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProtoMessageMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        ProtoMessageModel value = (ProtoMessageModel)[input readEnum];
        if (ProtoMessageModelIsValidValue(value)) {
          [self setModel:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        ProtoMessageContentBuilder* subBuilder = [ProtoMessageContent builder];
        if (self.hasContent) {
          [subBuilder mergeFrom:self.content];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setContent:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setChannel:[input readString]];
        break;
      }
      case 34: {
        [self setId:[input readString]];
        break;
      }
      case 42: {
        [self setLocalId:[input readString]];
        break;
      }
      case 48: {
        ProtoMessageMessageType value = (ProtoMessageMessageType)[input readEnum];
        if (ProtoMessageMessageTypeIsValidValue(value)) {
          [self setMsgType:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
      case 58: {
        [self setUid:[input readString]];
        break;
      }
      case 64: {
        [self setTimestamp:[input readInt64]];
        break;
      }
      case 74: {
        [self setOwnerId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasModel {
  return resultMessage.hasModel;
}
- (ProtoMessageModel) model {
  return resultMessage.model;
}
- (ProtoMessageMessageBuilder*) setModel:(ProtoMessageModel) value {
  resultMessage.hasModel = YES;
  resultMessage.model = value;
  return self;
}
- (ProtoMessageMessageBuilder*) clearModel {
  resultMessage.hasModel = NO;
  resultMessage.model = ProtoMessageModelSystem;
  return self;
}
- (BOOL) hasContent {
  return resultMessage.hasContent;
}
- (ProtoMessageContent*) content {
  return resultMessage.content;
}
- (ProtoMessageMessageBuilder*) setContent:(ProtoMessageContent*) value {
  resultMessage.hasContent = YES;
  resultMessage.content = value;
  return self;
}
- (ProtoMessageMessageBuilder*) setContentBuilder:(ProtoMessageContentBuilder*) builderForValue {
  return [self setContent:[builderForValue build]];
}
- (ProtoMessageMessageBuilder*) mergeContent:(ProtoMessageContent*) value {
  if (resultMessage.hasContent &&
      resultMessage.content != [ProtoMessageContent defaultInstance]) {
    resultMessage.content =
      [[[ProtoMessageContent builderWithPrototype:resultMessage.content] mergeFrom:value] buildPartial];
  } else {
    resultMessage.content = value;
  }
  resultMessage.hasContent = YES;
  return self;
}
- (ProtoMessageMessageBuilder*) clearContent {
  resultMessage.hasContent = NO;
  resultMessage.content = [ProtoMessageContent defaultInstance];
  return self;
}
- (BOOL) hasChannel {
  return resultMessage.hasChannel;
}
- (NSString*) channel {
  return resultMessage.channel;
}
- (ProtoMessageMessageBuilder*) setChannel:(NSString*) value {
  resultMessage.hasChannel = YES;
  resultMessage.channel = value;
  return self;
}
- (ProtoMessageMessageBuilder*) clearChannel {
  resultMessage.hasChannel = NO;
  resultMessage.channel = @"";
  return self;
}
- (BOOL) hasId {
  return resultMessage.hasId;
}
- (NSString*) id {
  return resultMessage.id;
}
- (ProtoMessageMessageBuilder*) setId:(NSString*) value {
  resultMessage.hasId = YES;
  resultMessage.id = value;
  return self;
}
- (ProtoMessageMessageBuilder*) clearId {
  resultMessage.hasId = NO;
  resultMessage.id = @"";
  return self;
}
- (BOOL) hasLocalId {
  return resultMessage.hasLocalId;
}
- (NSString*) localId {
  return resultMessage.localId;
}
- (ProtoMessageMessageBuilder*) setLocalId:(NSString*) value {
  resultMessage.hasLocalId = YES;
  resultMessage.localId = value;
  return self;
}
- (ProtoMessageMessageBuilder*) clearLocalId {
  resultMessage.hasLocalId = NO;
  resultMessage.localId = @"";
  return self;
}
- (BOOL) hasMsgType {
  return resultMessage.hasMsgType;
}
- (ProtoMessageMessageType) msgType {
  return resultMessage.msgType;
}
- (ProtoMessageMessageBuilder*) setMsgType:(ProtoMessageMessageType) value {
  resultMessage.hasMsgType = YES;
  resultMessage.msgType = value;
  return self;
}
- (ProtoMessageMessageBuilder*) clearMsgType {
  resultMessage.hasMsgType = NO;
  resultMessage.msgType = ProtoMessageMessageTypeReceive;
  return self;
}
- (BOOL) hasUid {
  return resultMessage.hasUid;
}
- (NSString*) uid {
  return resultMessage.uid;
}
- (ProtoMessageMessageBuilder*) setUid:(NSString*) value {
  resultMessage.hasUid = YES;
  resultMessage.uid = value;
  return self;
}
- (ProtoMessageMessageBuilder*) clearUid {
  resultMessage.hasUid = NO;
  resultMessage.uid = @"";
  return self;
}
- (BOOL) hasTimestamp {
  return resultMessage.hasTimestamp;
}
- (SInt64) timestamp {
  return resultMessage.timestamp;
}
- (ProtoMessageMessageBuilder*) setTimestamp:(SInt64) value {
  resultMessage.hasTimestamp = YES;
  resultMessage.timestamp = value;
  return self;
}
- (ProtoMessageMessageBuilder*) clearTimestamp {
  resultMessage.hasTimestamp = NO;
  resultMessage.timestamp = 0L;
  return self;
}
- (BOOL) hasOwnerId {
  return resultMessage.hasOwnerId;
}
- (NSString*) ownerId {
  return resultMessage.ownerId;
}
- (ProtoMessageMessageBuilder*) setOwnerId:(NSString*) value {
  resultMessage.hasOwnerId = YES;
  resultMessage.ownerId = value;
  return self;
}
- (ProtoMessageMessageBuilder*) clearOwnerId {
  resultMessage.hasOwnerId = NO;
  resultMessage.ownerId = @"";
  return self;
}
@end

@interface ProtoMessagePoint ()
@property Float64 x;
@property Float64 y;
@end

@implementation ProtoMessagePoint

- (BOOL) hasX {
  return !!hasX_;
}
- (void) setHasX:(BOOL) _value_ {
  hasX_ = !!_value_;
}
@synthesize x;
- (BOOL) hasY {
  return !!hasY_;
}
- (void) setHasY:(BOOL) _value_ {
  hasY_ = !!_value_;
}
@synthesize y;
- (instancetype) init {
  if ((self = [super init])) {
    self.x = 0;
    self.y = 0;
  }
  return self;
}
static ProtoMessagePoint* defaultProtoMessagePointInstance = nil;
+ (void) initialize {
  if (self == [ProtoMessagePoint class]) {
    defaultProtoMessagePointInstance = [[ProtoMessagePoint alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultProtoMessagePointInstance;
}
- (instancetype) defaultInstance {
  return defaultProtoMessagePointInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasX) {
    [output writeDouble:1 value:self.x];
  }
  if (self.hasY) {
    [output writeDouble:2 value:self.y];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasX) {
    size_ += computeDoubleSize(1, self.x);
  }
  if (self.hasY) {
    size_ += computeDoubleSize(2, self.y);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ProtoMessagePoint*) parseFromData:(NSData*) data {
  return (ProtoMessagePoint*)[[[ProtoMessagePoint builder] mergeFromData:data] build];
}
+ (ProtoMessagePoint*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessagePoint*)[[[ProtoMessagePoint builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessagePoint*) parseFromInputStream:(NSInputStream*) input {
  return (ProtoMessagePoint*)[[[ProtoMessagePoint builder] mergeFromInputStream:input] build];
}
+ (ProtoMessagePoint*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessagePoint*)[[[ProtoMessagePoint builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessagePoint*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ProtoMessagePoint*)[[[ProtoMessagePoint builder] mergeFromCodedInputStream:input] build];
}
+ (ProtoMessagePoint*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ProtoMessagePoint*)[[[ProtoMessagePoint builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ProtoMessagePointBuilder*) builder {
  return [[ProtoMessagePointBuilder alloc] init];
}
+ (ProtoMessagePointBuilder*) builderWithPrototype:(ProtoMessagePoint*) prototype {
  return [[ProtoMessagePoint builder] mergeFrom:prototype];
}
- (ProtoMessagePointBuilder*) builder {
  return [ProtoMessagePoint builder];
}
- (ProtoMessagePointBuilder*) toBuilder {
  return [ProtoMessagePoint builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasX) {
    [output appendFormat:@"%@%@: %@\n", indent, @"x", [NSNumber numberWithDouble:self.x]];
  }
  if (self.hasY) {
    [output appendFormat:@"%@%@: %@\n", indent, @"y", [NSNumber numberWithDouble:self.y]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasX) {
    [dictionary setObject: [NSNumber numberWithDouble:self.x] forKey: @"x"];
  }
  if (self.hasY) {
    [dictionary setObject: [NSNumber numberWithDouble:self.y] forKey: @"y"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ProtoMessagePoint class]]) {
    return NO;
  }
  ProtoMessagePoint *otherMessage = other;
  return
      self.hasX == otherMessage.hasX &&
      (!self.hasX || self.x == otherMessage.x) &&
      self.hasY == otherMessage.hasY &&
      (!self.hasY || self.y == otherMessage.y) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasX) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.x] hash];
  }
  if (self.hasY) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.y] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ProtoMessagePointBuilder()
@property (strong) ProtoMessagePoint* resultPoint;
@end

@implementation ProtoMessagePointBuilder
@synthesize resultPoint;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPoint = [[ProtoMessagePoint alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPoint;
}
- (ProtoMessagePointBuilder*) clear {
  self.resultPoint = [[ProtoMessagePoint alloc] init];
  return self;
}
- (ProtoMessagePointBuilder*) clone {
  return [ProtoMessagePoint builderWithPrototype:resultPoint];
}
- (ProtoMessagePoint*) defaultInstance {
  return [ProtoMessagePoint defaultInstance];
}
- (ProtoMessagePoint*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProtoMessagePoint*) buildPartial {
  ProtoMessagePoint* returnMe = resultPoint;
  self.resultPoint = nil;
  return returnMe;
}
- (ProtoMessagePointBuilder*) mergeFrom:(ProtoMessagePoint*) other {
  if (other == [ProtoMessagePoint defaultInstance]) {
    return self;
  }
  if (other.hasX) {
    [self setX:other.x];
  }
  if (other.hasY) {
    [self setY:other.y];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProtoMessagePointBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProtoMessagePointBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setX:[input readDouble]];
        break;
      }
      case 17: {
        [self setY:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasX {
  return resultPoint.hasX;
}
- (Float64) x {
  return resultPoint.x;
}
- (ProtoMessagePointBuilder*) setX:(Float64) value {
  resultPoint.hasX = YES;
  resultPoint.x = value;
  return self;
}
- (ProtoMessagePointBuilder*) clearX {
  resultPoint.hasX = NO;
  resultPoint.x = 0;
  return self;
}
- (BOOL) hasY {
  return resultPoint.hasY;
}
- (Float64) y {
  return resultPoint.y;
}
- (ProtoMessagePointBuilder*) setY:(Float64) value {
  resultPoint.hasY = YES;
  resultPoint.y = value;
  return self;
}
- (ProtoMessagePointBuilder*) clearY {
  resultPoint.hasY = NO;
  resultPoint.y = 0;
  return self;
}
@end

@interface ProtoMessageBuilder()
@property (strong) ProtoMessage* resultProtoMessage;
@end

@implementation ProtoMessageBuilder
@synthesize resultProtoMessage;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultProtoMessage = [[ProtoMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultProtoMessage;
}
- (ProtoMessageBuilder*) clear {
  self.resultProtoMessage = [[ProtoMessage alloc] init];
  return self;
}
- (ProtoMessageBuilder*) clone {
  return [ProtoMessage builderWithPrototype:resultProtoMessage];
}
- (ProtoMessage*) defaultInstance {
  return [ProtoMessage defaultInstance];
}
- (ProtoMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ProtoMessage*) buildPartial {
  ProtoMessage* returnMe = resultProtoMessage;
  self.resultProtoMessage = nil;
  return returnMe;
}
- (ProtoMessageBuilder*) mergeFrom:(ProtoMessage*) other {
  if (other == [ProtoMessage defaultInstance]) {
    return self;
  }
  if (other.hasAccessToken) {
    [self setAccessToken:other.accessToken];
  }
  if (other.hasBroadcastId) {
    [self setBroadcastId:other.broadcastId];
  }
  if (other.hasGeo) {
    [self mergeGeo:other.geo];
  }
  if (other.hasMessage) {
    [self mergeMessage:other.message];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ProtoMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ProtoMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setAccessToken:[input readString]];
        break;
      }
      case 18: {
        [self setBroadcastId:[input readString]];
        break;
      }
      case 26: {
        ProtoMessagePointBuilder* subBuilder = [ProtoMessagePoint builder];
        if (self.hasGeo) {
          [subBuilder mergeFrom:self.geo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setGeo:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        ProtoMessageMessageBuilder* subBuilder = [ProtoMessageMessage builder];
        if (self.hasMessage) {
          [subBuilder mergeFrom:self.message];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMessage:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasAccessToken {
  return resultProtoMessage.hasAccessToken;
}
- (NSString*) accessToken {
  return resultProtoMessage.accessToken;
}
- (ProtoMessageBuilder*) setAccessToken:(NSString*) value {
  resultProtoMessage.hasAccessToken = YES;
  resultProtoMessage.accessToken = value;
  return self;
}
- (ProtoMessageBuilder*) clearAccessToken {
  resultProtoMessage.hasAccessToken = NO;
  resultProtoMessage.accessToken = @"";
  return self;
}
- (BOOL) hasBroadcastId {
  return resultProtoMessage.hasBroadcastId;
}
- (NSString*) broadcastId {
  return resultProtoMessage.broadcastId;
}
- (ProtoMessageBuilder*) setBroadcastId:(NSString*) value {
  resultProtoMessage.hasBroadcastId = YES;
  resultProtoMessage.broadcastId = value;
  return self;
}
- (ProtoMessageBuilder*) clearBroadcastId {
  resultProtoMessage.hasBroadcastId = NO;
  resultProtoMessage.broadcastId = @"";
  return self;
}
- (BOOL) hasGeo {
  return resultProtoMessage.hasGeo;
}
- (ProtoMessagePoint*) geo {
  return resultProtoMessage.geo;
}
- (ProtoMessageBuilder*) setGeo:(ProtoMessagePoint*) value {
  resultProtoMessage.hasGeo = YES;
  resultProtoMessage.geo = value;
  return self;
}
- (ProtoMessageBuilder*) setGeoBuilder:(ProtoMessagePointBuilder*) builderForValue {
  return [self setGeo:[builderForValue build]];
}
- (ProtoMessageBuilder*) mergeGeo:(ProtoMessagePoint*) value {
  if (resultProtoMessage.hasGeo &&
      resultProtoMessage.geo != [ProtoMessagePoint defaultInstance]) {
    resultProtoMessage.geo =
      [[[ProtoMessagePoint builderWithPrototype:resultProtoMessage.geo] mergeFrom:value] buildPartial];
  } else {
    resultProtoMessage.geo = value;
  }
  resultProtoMessage.hasGeo = YES;
  return self;
}
- (ProtoMessageBuilder*) clearGeo {
  resultProtoMessage.hasGeo = NO;
  resultProtoMessage.geo = [ProtoMessagePoint defaultInstance];
  return self;
}
- (BOOL) hasMessage {
  return resultProtoMessage.hasMessage;
}
- (ProtoMessageMessage*) message {
  return resultProtoMessage.message;
}
- (ProtoMessageBuilder*) setMessage:(ProtoMessageMessage*) value {
  resultProtoMessage.hasMessage = YES;
  resultProtoMessage.message = value;
  return self;
}
- (ProtoMessageBuilder*) setMessageBuilder:(ProtoMessageMessageBuilder*) builderForValue {
  return [self setMessage:[builderForValue build]];
}
- (ProtoMessageBuilder*) mergeMessage:(ProtoMessageMessage*) value {
  if (resultProtoMessage.hasMessage &&
      resultProtoMessage.message != [ProtoMessageMessage defaultInstance]) {
    resultProtoMessage.message =
      [[[ProtoMessageMessage builderWithPrototype:resultProtoMessage.message] mergeFrom:value] buildPartial];
  } else {
    resultProtoMessage.message = value;
  }
  resultProtoMessage.hasMessage = YES;
  return self;
}
- (ProtoMessageBuilder*) clearMessage {
  resultProtoMessage.hasMessage = NO;
  resultProtoMessage.message = [ProtoMessageMessage defaultInstance];
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
